{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","domain","corpId","authCode","userId","showType","userName","deptList","targetDept","userList","targetUser","dingMsg","this","chooseDept","className","Group","onChange","e","addDept","value","direction","map","item","i","deptId","name","type","onClick","chooseUser","addUser","userid","showMsgInput","inputMsg","placeholder","pushDing","setState","target","axios","post","JSON","stringify","headers","then","res","data","success","message","error","errorMsg","catch","alert","sccess","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e780ec63.chunk.js","sourcesContent":["import axios from \"axios\"\nimport React from \"react\"\nimport \"./App.css\"\nimport \"antd/dist/antd.min.css\"\nimport {Button, message, Input, Radio, Space} from \"antd\"\nimport {login} from \"./login.js\";\n// import * as dd from \"dingtalk-jsapi\"\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            //内网穿透工具介绍:\n            // https://developers.dingtalk.com/document/resourcedownload/http-intranet-penetration?pnamespace=app\n            domain: \"\",\n            corpId: '',\n            authCode: '',\n            userId: '',\n            showType: 0,\n            userName: '',\n            deptList: [],\n            targetDept: \"\",\n            userList: [],\n            targetUser: \"\",\n            dingMsg: \"\",\n        }\n    }\n\n    render() {\n\n        // 1为根部门\n        this.chooseDept(1);\n        return (\n            // 主模块\n            <div className=\"App\">\n                {this.state.showType === 0 && (\n                    <div>\n                        <h2>发送ding消息</h2>\n                        <Radio.Group\n                            onChange={(e) => this.addDept(e)}\n                            value={this.state.targetDept}\n                        >\n                            <Space direction=\"vertical\">\n                                {this.state.deptList.map((item, i) => (\n                                    <Radio value={item.deptId} key={i}>\n                                        {item.name}\n                                    </Radio>\n                                ))}\n                            </Space>\n                        </Radio.Group>\n                        <br />\n                        <br />\n                        <Button type=\"primary\" onClick={() => this.chooseUser()}>\n                            选中部门\n                        </Button>\n                        <br />\n\n                    </div>\n                )}\n                {this.state.showType === 1 && (\n                    <div>\n                        <h2>发送ding消息</h2>\n                        <Radio.Group\n                            onChange={(e) => this.addUser(e)}\n                            value={this.state.targetUser}\n                        >\n                            <Space direction=\"vertical\">\n                                {this.state.userList.map((item, i) => (\n                                    <Radio value={item.userid} key={i}>\n                                        {item.name}\n                                    </Radio>\n                                ))}\n                            </Space>\n                        </Radio.Group>\n                        <br />\n                        <br />\n                        <Button type=\"primary\" onClick={() => this.showMsgInput()}>\n                            选中用户\n                        </Button>\n                        <br />\n                    </div>\n                )}\n                {this.state.showType === 2 && (\n                    <div>\n                        <h2>发送ding消息</h2>\n                        <Input onChange={(e)=>this.inputMsg(e)} placeholder=\"ding消息\" />\n                        <br />\n                        <br />\n                        <Button type=\"primary\" onClick={() => this.pushDing()}>\n                            发送ding消息\n                        </Button>\n                        <br />\n                    </div>\n                )}\n            </div>\n        );\n    }\n    inputMsg(e){\n        this.setState({ dingMsg: e.target.value })\n    }\n    addDept(e){\n        this.setState({ targetDept: e.target.value })\n    }\n    addUser(e){\n        this.setState({ targetUser: e.target.value })\n    }\n    chooseDept(deptId) {\n        axios\n            .post(this.state.domain + \"/biz/getDeptList\", JSON.stringify(deptId), {\n                headers: {\"Content-Type\": \"application/json\"},\n            })\n            .then((res) => {\n                if (res.data.success) {\n                    this.setState({\n                        deptList: res.data.data\n                    })\n                } else {\n                    message.error(res.data.errorMsg)\n                }\n            })\n            .catch((error) => {\n                alert(\"chooseDept err, \" + JSON.stringify(error))\n            })\n    }\n    chooseUser() {\n        axios\n            .post(this.state.domain + \"/biz/getDeptUser\", JSON.stringify(this.state.targetDept), {\n                headers: {\"Content-Type\": \"application/json\"},\n            })\n            .then((res) => {\n                if (res.data.success) {\n                    this.setState({\n                        userList: res.data.data,\n                        showType: 1,\n                    })\n                } else {\n                    message.error(res.data.errorMsg)\n                }\n            })\n            .catch((error) => {\n                alert(\"chooseUser err, \" + JSON.stringify(error))\n            })\n    }\n\n    showMsgInput(){\n        this.setState({ showType: 2 })\n    }\n\n    pushDing() {\n        axios\n            .post(this.state.domain + \"/biz/sendDing?userId=\" + this.state.targetUser + \"&message=\" + this.state.dingMsg )\n            .then((res) => {\n                if (res.data.success) {\n                    message.sccess(\"发送成功\")\n                } else {\n                    message.error(res.data.errorMsg)\n                }\n            })\n            .catch((error) => {\n                alert(\"pushDing err, \" + JSON.stringify(error))\n            })\n    }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}